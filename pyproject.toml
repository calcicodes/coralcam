[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "coralcam"
version = "0.1.0"
description = "A photogrammetry system for coral imaging."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Oscar", email = "ob266@cam.ac.uk"},
]
maintainers = [
    {name = "Oscar", email = "ob266@cam.ac.uk"},
]
keywords = ["camera", "raspberry-pi", "coral", "monitoring", "picamera2"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera",
]

dependencies = [
    "gpiozero",
    "Rpi.GPIO",
    "pyserial",
    "picamera2",
    "libcamera",
    "rpi_hardware_pwm",
    "PyTmcStepper",
]

[project.optional-dependencies]
histogram = [
    "matplotlib>=3.5.0",
    "opencv-python>=4.5.0",
    "numpy>=1.20.0",
]
dev = [
    "pytest>=6.0",
    "black>=22.0",
    "flake8>=4.0",
    "isort>=5.0",
    "mypy>=0.900",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=3.0",
    "pytest-mock>=3.6",
]

[project.urls]
Homepage = "https://github.com/oscar/coralcam"  # Update with your actual URL
Repository = "https://github.com/oscar/coralcam.git"
Issues = "https://github.com/oscar/coralcam/issues"
Documentation = "https://github.com/oscar/coralcam/wiki"

[project.scripts]
coralcam = "coralcam.cli:main"  # Add if you create a CLI module

[tool.setuptools]
packages = ["coralcam"]

[tool.setuptools.package-data]
coralcam = ["*.yaml", "*.json", "*.cfg"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["coralcam"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "hardware: marks tests that require hardware",
]